{
  "version": 3,
  "sources": ["../../d3-array/src/ascending.js", "../../d3-array/src/bisector.js", "../../d3-array/src/number.js", "../../d3-array/src/bisect.js", "../../d3-array/src/array.js", "../../d3-array/src/ticks.js", "../../d3-array/src/shuffle.js", "../../react-compound-slider/src/Slider/utils.ts", "../../react-compound-slider/src/Slider/modes.ts", "../../react-compound-slider/src/utils.ts", "../../react-compound-slider/src/Rail/Rail.tsx", "../../react-compound-slider/src/Handles/Handles.tsx", "../../react-compound-slider/src/scales/LinearScale.ts", "../../react-compound-slider/src/Ticks/Ticks.tsx", "../../react-compound-slider/src/Tracks/Tracks.tsx", "../../react-compound-slider/src/scales/DiscreteScale.ts", "../../react-compound-slider/src/Slider/Slider.tsx"],
  "sourcesContent": ["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n", "export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n", "import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n", "export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n", "import React from 'react';\nimport warning from 'warning';\n\nimport { DiscreteScale } from '../scales/DiscreteScale';\nimport { HandleItem } from '../types';\n\nexport const prfx = 'react-compound-slider:';\n\nexport function getSortByVal(reversed: boolean = false) {\n  return function sortByVal(a: HandleItem, b: HandleItem) {\n    if (a.val > b.val) {\n      return reversed ? -1 : 1;\n    }\n\n    if (b.val > a.val) {\n      return reversed ? 1 : -1;\n    }\n\n    return 0;\n  };\n}\n\nexport function getUpdatedHandles(\n  handles: HandleItem[],\n  updateKey: string,\n  updateValue: number,\n  reversed: boolean = false\n) {\n  const index = handles.findIndex(v => v.key === updateKey);\n\n  if (index !== -1) {\n    const { key, val } = handles[index];\n\n    if (val === updateValue) {\n      return handles;\n    }\n\n    return [\n      ...handles.slice(0, index),\n      { key, val: updateValue },\n      ...handles.slice(index + 1),\n    ].sort(getSortByVal(reversed));\n  }\n\n  return handles;\n}\n\nexport function getSliderDomain(slider: Element | null, vertical: boolean) {\n  if (!slider) {\n    return [0, 0];\n  }\n\n  const s = slider.getBoundingClientRect();\n\n  const d0 = vertical ? s.top : s.left;\n  const d1 = vertical ? s.bottom : s.right;\n\n  return [d0, d1];\n}\n\nexport function isNotValidTouch({\n  type = '',\n  touches,\n}: {\n  type: string;\n  touches: TouchEvent['touches'];\n}) {\n  return (\n    !touches ||\n    touches.length > 1 ||\n    (type.toLowerCase() === 'touchend' && touches.length > 0)\n  );\n}\n\nexport function getTouchPosition(\n  vertical: boolean,\n  e: React.TouchEvent | TouchEvent\n) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\n\nexport function getHandles(\n  values: ReadonlyArray<number> = [],\n  reversed: boolean,\n  valueToStep: DiscreteScale,\n  warn: boolean\n) {\n  let changes = 0;\n\n  const handles = values\n    .map(x => {\n      const val = valueToStep.getValue(x);\n\n      if (x !== val) {\n        changes += 1;\n        warning(\n          !warn,\n          `${prfx} Invalid value encountered. Changing ${x} to ${val}.`\n        );\n      }\n\n      return val;\n    })\n    .map((val, i) => ({ key: `$$-${i}`, val }))\n    .sort(getSortByVal(reversed));\n\n  return { handles, changes };\n}\n", "import { getUpdatedHandles } from './utils';\nimport { HandleItem } from '../types';\n\n// default mode\nexport function mode1(_: HandleItem[], next: HandleItem[]) {\n  return next;\n}\n\n// prevent duplicate values and crossing\nexport function mode2(curr: HandleItem[], next: HandleItem[]) {\n  for (let i = 0; i < curr.length; i++) {\n    if (curr[i].key !== next[i].key) {\n      return curr;\n    }\n\n    if (next[i + 1] && next[i].val === next[i + 1].val) {\n      return curr;\n    }\n  }\n\n  return next;\n}\n\n// pushable mode\nexport function mode3(\n  curr: HandleItem[],\n  next: HandleItem[],\n  step: number,\n  reversed: boolean,\n  getValue: (x: number) => number\n): HandleItem[] {\n  let indexForMovingHandle = -1;\n  let handleMoveIsPositive = true;\n\n  for (let i = 0; i < curr.length; i++) {\n    const c = curr[i];\n    const n = next[i];\n\n    // make sure keys are in same order if not return curr\n    if (!n || n.key !== c.key) {\n      return curr;\n    } else if (n.val !== c.val) {\n      indexForMovingHandle = i;\n      handleMoveIsPositive = n.val - c.val > 0;\n    }\n  }\n\n  // nothing has changed (shouldn't happen but just in case).\n  if (indexForMovingHandle === -1) {\n    return curr;\n  } else {\n    const increment = handleMoveIsPositive ? step : -step;\n\n    for (let i = 0; i < next.length; i++) {\n      const n0 = next[i];\n      const n1 = next[i + 1];\n\n      if (n1 && n0.val === n1.val) {\n        if (i === indexForMovingHandle) {\n          const newStep = n1.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n1.key,\n              n1.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        } else {\n          const newStep = n0.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n0.key,\n              n0.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        }\n      }\n    }\n  }\n\n  return next;\n}\n", "export function callAll<T>(...fns: (((e: T) => void) | undefined)[]) {\n  return (e: T) => {\n    return fns.forEach(fn => fn && fn(e));\n  };\n}\n", "import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { RailProps } from './types';\n\nconst NOOP = () => ({ value: 0, percent: 0 });\n\nexport class Rail extends Component<RailProps> {\n  getRailProps = (props: OtherProps = {}) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll(props && props.onTouchStart, emitTouch),\n    };\n  };\n\n  render() {\n    const {\n      getRailProps,\n      props: { getEventData, activeHandleID = '', children },\n    } = this;\n\n    const renderedChildren = children({\n      getEventData: getEventData || NOOP,\n      activeHandleID,\n      getRailProps,\n    });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n", "import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { HandlesProps } from './types';\n\nexport class Handles extends Component<HandlesProps> {\n  autofocus = (e: React.MouseEvent<Element>) => {\n    if (e.target instanceof HTMLElement) {\n      e.target.focus();\n    }\n  };\n\n  getHandleProps = (id: string, props: OtherProps = {}) => {\n    const { emitKeyboard, emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onKeyDown: callAll<React.KeyboardEvent<Element>>(\n        props && props.onKeyDown,\n        (e: React.KeyboardEvent<Element>) => emitKeyboard && emitKeyboard(e, id)\n      ),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        this.autofocus,\n        (e: React.MouseEvent) => emitMouse && emitMouse(e, id)\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        (e: React.TouchEvent<Element>) => emitTouch && emitTouch(e, id)\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getHandleProps,\n      props: { activeHandleID = '', children, handles = [] },\n    } = this;\n\n    const renderedChildren = children({\n      handles,\n      activeHandleID,\n      getHandleProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n", "import { ticks } from 'd3-array';\n\nimport { Interpolator } from '../types';\n\nexport class LinearScale {\n  interpolator: Interpolator | null;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  constructor() {\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.interpolator = null;\n  }\n\n  createInterpolator(domain: number[], range: number[]) {\n    const d0 = domain[0];\n    const d1 = domain[1];\n\n    const r0 = range[0];\n    const r1 = range[1];\n\n    if (d1 < d0) {\n      return (x: number) =>\n        this.interpolateValue(r1, r0)(this.deinterpolateValue(d1, d0)(x));\n    } else {\n      return (x: number) =>\n        this.interpolateValue(r0, r1)(this.deinterpolateValue(d0, d1)(x));\n    }\n  }\n\n  interpolateValue(a: number, b: number) {\n    return (\n      (a = +a),\n      (b -= a),\n      function i(t: number) {\n        return a + b * t;\n      }\n    );\n  }\n\n  deinterpolateValue(a: number, b: number) {\n    return (b -= a = +a) ? (x: number) => (x - a) / b : () => b;\n  }\n\n  rescale() {\n    this.interpolator = null;\n\n    return this;\n  }\n\n  getValue(x: number) {\n    const { domain, range } = this;\n\n    return (\n      this.interpolator ||\n      (this.interpolator = this.createInterpolator(domain, range))\n    )(+x);\n  }\n\n  setDomain(val: number[]) {\n    this.domain = [val[0], val[1]];\n\n    this.rescale();\n\n    return this;\n  }\n\n  getDomain() {\n    return this.domain;\n  }\n\n  setRange(val: number[]) {\n    this.range = [val[0], val[1]];\n\n    return this;\n  }\n\n  getRange() {\n    return this.range;\n  }\n\n  getTicks(count: number) {\n    const d = this.domain;\n    return ticks(d[0], d[d.length - 1], count ? count : 10);\n  }\n}\n", "import React, { Component } from 'react';\n\nimport { TicksProps } from './types';\nimport { LinearScale } from '../scales/LinearScale';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Ticks extends Component<TicksProps> {\n  public render() {\n    const {\n      children,\n      values,\n      scale = new LinearScale(),\n      count = 10,\n      getEventData = defaultGetEventData,\n      activeHandleID = '',\n    } = this.props;\n\n    const ticks = (values ? values : scale.getTicks(count)).map((value) => ({\n      id: `$$-${value}`,\n      value,\n      percent: scale.getValue(value),\n    }));\n\n    const renderedChildren = children({ getEventData, activeHandleID, ticks });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n", "import React, { Component } from 'react';\n\nimport { callAll } from '../utils';\nimport { LinearScale } from '../scales/LinearScale';\nimport { TracksProps } from './types';\nimport { OtherProps } from '../types';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Tracks extends Component<TracksProps> {\n  getTrackProps = (props?: OtherProps) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...(props || {}),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        emitTouch\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getTrackProps,\n      props: {\n        children,\n        left = true,\n        right = true,\n        scale = new LinearScale(),\n        handles = [],\n        getEventData = defaultGetEventData,\n        activeHandleID = '',\n      },\n    } = this;\n\n    const domain = scale.getDomain();\n    const tracks = [];\n\n    for (let i = 0; i < handles.length + 1; i++) {\n      let source = handles[i - 1];\n      let target = handles[i];\n\n      if (i === 0 && left === true) {\n        source = { id: '$', value: domain[0], percent: 0 };\n      } else if (i === handles.length && right === true) {\n        target = { id: '$', value: domain[1], percent: 100 };\n      }\n\n      if (source && target) {\n        tracks.push({\n          id: `${source.id}-${target.id}`,\n          source,\n          target,\n        });\n      }\n    }\n\n    const renderedChildren = children({\n      getEventData,\n      activeHandleID,\n      tracks,\n      getTrackProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n", "function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport class DiscreteScale {\n  step: number = 1;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  setDomain = (val: number[]) => {\n    this.domain = [val[0], val[1]];\n\n    return this;\n  };\n\n  setRange = (val: number[]) => {\n    this.range = [val[0], val[1]];\n\n    return this;\n  };\n\n  setStep = (val: number) => {\n    this.step = val;\n\n    return this;\n  };\n\n  getValue = (x: number) => {\n    const {\n      domain: [d0, d1],\n      range: [r0, r1],\n      step,\n    } = this;\n\n    const p = (clamp(x, d0, d1) - d0) / (d1 - d0);\n    const b = step * Math.round((p * (r1 - r0)) / step) + r0;\n\n    return clamp(b, r0 < r1 ? r0 : r1, r1 > r0 ? r1 : r0);\n  };\n}\n", "import React, { PureComponent, isValidElement } from 'react';\nimport warning from 'warning';\nimport { mode1, mode2, mode3 } from './modes';\nimport {\n  isNotValidTouch,\n  getTouchPosition,\n  getUpdatedHandles,\n  getSliderDomain,\n  getHandles,\n  prfx,\n} from './utils';\nimport { Rail } from '../Rail';\nimport { Handles } from '../Handles';\nimport { Ticks } from '../Ticks';\nimport { Tracks } from '../Tracks';\nimport { LinearScale } from '../scales/LinearScale';\nimport { DiscreteScale } from '../scales/DiscreteScale';\n\nimport { SliderProps, SliderState } from './types';\nimport { HandleItem } from '../types';\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst noop = () => {};\n\nconst compare = (b: any[]) => (m: any, d: any, i: number) => m && b[i] === d;\n\nconst equal = (a: any, b: any) => {\n  return a === b || (a.length === b.length && a.reduce(compare(b), true));\n};\n\ninterface RCSComponent {\n  type: {\n    name: 'Rail' | 'Handles' | 'Ticks' | 'Tracks';\n  };\n}\n\nconst isRCSComponent = (item: React.ReactNode) => {\n  if (!isValidElement(item)) {\n    return false;\n  }\n\n  const type = (item as RCSComponent).type;\n  const name = type ? type.name : '';\n\n  return (\n    name === Handles.name ||\n    name === Rail.name ||\n    name === Ticks.name ||\n    name === Tracks.name\n  );\n};\n\nconst getNextValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr - step : curr + step;\n  return reversed ? Math.max(domain[0], newVal) : Math.min(domain[1], newVal);\n};\n\nconst getPrevValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr + step : curr - step;\n  return reversed ? Math.min(domain[1], newVal) : Math.max(domain[0], newVal);\n};\n\nconst defaultDomain = [0, 100];\n\nexport class Slider<\n  T extends HTMLDivElement = HTMLDivElement\n> extends PureComponent<SliderProps, SliderState> {\n  state = {\n    step: 0.1,\n    values: [],\n    domain: defaultDomain,\n    handles: [] as HandleItem[],\n    reversed: false,\n    activeHandleID: '',\n    valueToPerc: null,\n    valueToStep: null,\n    pixelToStep: null,\n  };\n\n  slider = React.createRef<T>();\n\n  static getDerivedStateFromProps(\n    nextProps: SliderProps,\n    prevState: SliderState\n  ) {\n    const {\n      step = 0.1,\n      values,\n      domain = defaultDomain,\n      reversed = false,\n      onUpdate = noop,\n      onChange = noop,\n      warnOnChanges = false,\n    } = nextProps;\n    let valueToPerc = prevState.valueToPerc;\n    let valueToStep = prevState.valueToStep;\n    let pixelToStep = prevState.pixelToStep;\n\n    const nextState: Partial<SliderState> = {};\n\n    if (!valueToPerc || !valueToStep || !pixelToStep) {\n      valueToPerc = new LinearScale();\n      valueToStep = new DiscreteScale();\n      pixelToStep = new DiscreteScale();\n\n      nextState.valueToPerc = valueToPerc;\n      nextState.valueToStep = valueToStep;\n      nextState.pixelToStep = pixelToStep;\n    }\n\n    if (\n      prevState.domain === defaultDomain ||\n      prevState.step === null ||\n      prevState.domain === null ||\n      prevState.reversed === null ||\n      step !== prevState.step ||\n      domain[0] !== prevState.domain[0] ||\n      domain[1] !== prevState.domain[1] ||\n      reversed !== prevState.reversed\n    ) {\n      const [min, max] = domain;\n      valueToStep.setStep(step).setRange([min, max]).setDomain([min, max]);\n\n      if (reversed === true) {\n        valueToPerc.setDomain([min, max]).setRange([100, 0]);\n        pixelToStep.setStep(step).setRange([max, min]);\n      } else {\n        valueToPerc.setDomain([min, max]).setRange([0, 100]);\n        pixelToStep.setStep(step).setRange([min, max]);\n      }\n\n      warning(\n        max > min,\n        `${prfx} Max must be greater than min (even if reversed). Max is ${max}. Min is ${min}.`\n      );\n\n      const { handles, changes } = getHandles(\n        values || prevState.values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes || values === undefined || values === prevState.values) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.step = step;\n      nextState.values = values;\n      nextState.domain = domain === defaultDomain ? [...domain] : domain;\n      nextState.handles = handles;\n      nextState.reversed = reversed;\n    } else if (!equal(values, prevState.values)) {\n      const { handles, changes } = getHandles(\n        values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.values = values;\n      nextState.handles = handles;\n    }\n\n    if (Object.keys(nextState).length) {\n      return nextState;\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    const { pixelToStep } = this.state;\n    const { vertical } = this.props;\n\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners() {\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onKeyDown = (e: KeyboardEvent, handleID: string) => {\n    let validUpKeys = ['ArrowRight', 'ArrowUp'];\n    let validDownKeys = ['ArrowDown', 'ArrowLeft'];\n\n    const {\n      state: { handles },\n      props: {\n        step = 0.1,\n        reversed = false,\n        vertical = false,\n        domain = [0, 100] as number[],\n      },\n    } = this;\n    const key = e.key || `${e.keyCode}`;\n\n    if (!validUpKeys.concat(validDownKeys).includes(key)) {\n      return;\n    }\n\n    if (vertical) {\n      [validUpKeys, validDownKeys] = [validDownKeys, validUpKeys];\n    }\n\n    e.stopPropagation && e.stopPropagation();\n    e.preventDefault && e.preventDefault();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (!found) {\n      return;\n    }\n\n    const currVal = found.val;\n    let newVal = currVal;\n\n    if (validUpKeys.includes(key)) {\n      newVal = getNextValue(currVal, step, domain, reversed);\n    } else if (validDownKeys.includes(key)) {\n      newVal = getPrevValue(currVal, step, domain, reversed);\n    }\n    const nextHandles = handles.map((v) =>\n      v.key === handleID ? { key: v.key, val: newVal } : v\n    );\n\n    this.submitUpdate(nextHandles, true);\n  };\n\n  onMouseDown = (e: MouseEvent, handleID: string) => {\n    this.onStart(e, handleID, false);\n  };\n\n  onTouchStart = (e: TouchEvent, handleID: string) => {\n    if (isNotValidTouch(e)) {\n      return;\n    }\n\n    this.onStart(e, handleID, true);\n  };\n\n  onStart(e: MouseEvent | TouchEvent, handleID: string, isTouch: boolean) {\n    const {\n      state: { handles },\n      props: { onSlideStart = noop },\n    } = this;\n\n    if (!isTouch) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    e.stopPropagation && e.stopPropagation();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (found) {\n      this.setState({ activeHandleID: handleID });\n      onSlideStart(\n        handles.map((d) => d.val),\n        { activeHandleID: handleID }\n      );\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    } else {\n      this.setState({ activeHandleID: '' });\n      this.handleRailAndTrackClicks(e, isTouch);\n    }\n  }\n\n  handleRailAndTrackClicks(e: MouseEvent | TouchEvent, isTouch: boolean) {\n    const {\n      state: { handles: curr, pixelToStep },\n      props: { vertical, reversed = false },\n    } = this;\n    const { slider } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    let updateValue: number;\n\n    if (isTouch) {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n\n    // find the closest handle key\n    let updateKey = '';\n    let minDiff = Infinity;\n\n    for (let i = 0; i < curr.length; i++) {\n      const { key, val } = curr[i];\n      const diff = Math.abs(val - updateValue);\n\n      if (diff < minDiff) {\n        updateKey = key;\n        minDiff = diff;\n      }\n    }\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      updateKey,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.setState({ activeHandleID: updateKey }, () => {\n      this.submitUpdate(nextHandles, true);\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    });\n  }\n\n  getEventData = (e: React.MouseEvent | React.TouchEvent, isTouch: boolean) => {\n    const {\n      state: { pixelToStep, valueToPerc },\n      props: { vertical },\n    } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    let value;\n\n    if (isTouch && e instanceof TouchEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else if (e instanceof MouseEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n    return {\n      value,\n      // @ts-ignore\n      percent: valueToPerc.getValue(value),\n    };\n  };\n\n  addMouseEvents() {\n    if (isBrowser) {\n      document.addEventListener('mousemove', this.onMouseMove);\n      document.addEventListener('mouseup', this.onMouseUp);\n    }\n  }\n\n  addTouchEvents() {\n    if (isBrowser) {\n      document.addEventListener('touchmove', this.onTouchMove);\n      document.addEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onMouseMove = (e: MouseEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID = '' },\n      props: { vertical, reversed = false },\n    } = this;\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  onTouchMove = (e: TouchEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID },\n      props: { vertical, reversed },\n    } = this;\n    if (pixelToStep === null || isNotValidTouch(e)) {\n      return;\n    }\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  submitUpdate(next: HandleItem[], callOnChange = false) {\n    const {\n      mode = 1,\n      step = 0.1,\n      onUpdate = noop,\n      onChange = noop,\n      reversed = false,\n    } = this.props;\n    //@ts-ignore\n    const { getValue } = this.state.valueToStep;\n\n    this.setState(({ handles: curr }) => {\n      let handles: HandleItem[] = [];\n\n      // given the current handles and a candidate set, decide what to do\n      if (typeof mode === 'function') {\n        handles = mode(curr, next, step, reversed, getValue);\n        warning(\n          Array.isArray(handles),\n          'Custom mode function did not return an array.'\n        );\n      } else {\n        switch (mode) {\n          case 1:\n            handles = mode1(curr, next);\n            break;\n          case 2:\n            handles = mode2(curr, next);\n            break;\n          case 3:\n            handles = mode3(curr, next, step, reversed, getValue);\n            break;\n          default:\n            handles = next;\n            warning(false, `${prfx} Invalid mode value.`);\n        }\n      }\n\n      onUpdate(handles.map((d) => d.val));\n\n      if (callOnChange) {\n        onChange(handles.map((d) => d.val));\n      }\n\n      return { handles };\n    });\n  }\n\n  onMouseUp = () => {\n    const {\n      state: { handles = [], activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n    }\n  };\n\n  onTouchEnd = () => {\n    const {\n      state: { handles, activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  render() {\n    const {\n      state: { handles, valueToPerc, activeHandleID },\n      props: {\n        className,\n        rootStyle = {},\n        rootProps = {},\n        component: Comp = 'div',\n        disabled = false,\n        flatten = false,\n      },\n    } = this;\n\n    const mappedHandles = handles.map(({ key, val }) => {\n      // @ts-ignore\n      return { id: key, value: val, percent: valueToPerc.getValue(val) };\n    });\n\n    const children = React.Children.map(this.props.children, (child) => {\n      if (isRCSComponent(child) === true) {\n        return React.cloneElement(child as React.ReactElement, {\n          scale: valueToPerc,\n          handles: mappedHandles,\n          activeHandleID,\n          getEventData: this.getEventData,\n          emitKeyboard: disabled ? noop : this.onKeyDown,\n          emitMouse: disabled ? noop : this.onMouseDown,\n          emitTouch: disabled ? noop : this.onTouchStart,\n        });\n      } else {\n        return child;\n      }\n    });\n\n    return flatten ? (\n      <>\n        {React.createElement(Comp, {\n          ...rootProps,\n          style: rootStyle,\n          className: className,\n          ref: this.slider,\n        })}\n        {children}\n      </>\n    ) : (\n      <>\n        {React.createElement(\n          Comp,\n          {\n            ...rootProps,\n            style: rootStyle,\n            className: className,\n            ref: this.slider,\n          },\n          children\n        )}\n      </>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
