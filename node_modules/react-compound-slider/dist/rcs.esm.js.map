{"version":3,"file":"rcs.esm.js","sources":["../src/Slider/utils.ts","../src/Slider/modes.ts","../src/utils.ts","../src/Rail/Rail.tsx","../src/Handles/Handles.tsx","../src/scales/LinearScale.ts","../src/Ticks/Ticks.tsx","../src/Tracks/Tracks.tsx","../src/scales/DiscreteScale.ts","../src/Slider/Slider.tsx"],"sourcesContent":["import React from 'react';\nimport warning from 'warning';\n\nimport { DiscreteScale } from '../scales/DiscreteScale';\nimport { HandleItem } from '../types';\n\nexport const prfx = 'react-compound-slider:';\n\nexport function getSortByVal(reversed: boolean = false) {\n  return function sortByVal(a: HandleItem, b: HandleItem) {\n    if (a.val > b.val) {\n      return reversed ? -1 : 1;\n    }\n\n    if (b.val > a.val) {\n      return reversed ? 1 : -1;\n    }\n\n    return 0;\n  };\n}\n\nexport function getUpdatedHandles(\n  handles: HandleItem[],\n  updateKey: string,\n  updateValue: number,\n  reversed: boolean = false\n) {\n  const index = handles.findIndex(v => v.key === updateKey);\n\n  if (index !== -1) {\n    const { key, val } = handles[index];\n\n    if (val === updateValue) {\n      return handles;\n    }\n\n    return [\n      ...handles.slice(0, index),\n      { key, val: updateValue },\n      ...handles.slice(index + 1),\n    ].sort(getSortByVal(reversed));\n  }\n\n  return handles;\n}\n\nexport function getSliderDomain(slider: Element | null, vertical: boolean) {\n  if (!slider) {\n    return [0, 0];\n  }\n\n  const s = slider.getBoundingClientRect();\n\n  const d0 = vertical ? s.top : s.left;\n  const d1 = vertical ? s.bottom : s.right;\n\n  return [d0, d1];\n}\n\nexport function isNotValidTouch({\n  type = '',\n  touches,\n}: {\n  type: string;\n  touches: TouchEvent['touches'];\n}) {\n  return (\n    !touches ||\n    touches.length > 1 ||\n    (type.toLowerCase() === 'touchend' && touches.length > 0)\n  );\n}\n\nexport function getTouchPosition(\n  vertical: boolean,\n  e: React.TouchEvent | TouchEvent\n) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\n\nexport function getHandles(\n  values: ReadonlyArray<number> = [],\n  reversed: boolean,\n  valueToStep: DiscreteScale,\n  warn: boolean\n) {\n  let changes = 0;\n\n  const handles = values\n    .map(x => {\n      const val = valueToStep.getValue(x);\n\n      if (x !== val) {\n        changes += 1;\n        warning(\n          !warn,\n          `${prfx} Invalid value encountered. Changing ${x} to ${val}.`\n        );\n      }\n\n      return val;\n    })\n    .map((val, i) => ({ key: `$$-${i}`, val }))\n    .sort(getSortByVal(reversed));\n\n  return { handles, changes };\n}\n","import { getUpdatedHandles } from './utils';\nimport { HandleItem } from '../types';\n\n// default mode\nexport function mode1(_: HandleItem[], next: HandleItem[]) {\n  return next;\n}\n\n// prevent duplicate values and crossing\nexport function mode2(curr: HandleItem[], next: HandleItem[]) {\n  for (let i = 0; i < curr.length; i++) {\n    if (curr[i].key !== next[i].key) {\n      return curr;\n    }\n\n    if (next[i + 1] && next[i].val === next[i + 1].val) {\n      return curr;\n    }\n  }\n\n  return next;\n}\n\n// pushable mode\nexport function mode3(\n  curr: HandleItem[],\n  next: HandleItem[],\n  step: number,\n  reversed: boolean,\n  getValue: (x: number) => number\n): HandleItem[] {\n  let indexForMovingHandle = -1;\n  let handleMoveIsPositive = true;\n\n  for (let i = 0; i < curr.length; i++) {\n    const c = curr[i];\n    const n = next[i];\n\n    // make sure keys are in same order if not return curr\n    if (!n || n.key !== c.key) {\n      return curr;\n    } else if (n.val !== c.val) {\n      indexForMovingHandle = i;\n      handleMoveIsPositive = n.val - c.val > 0;\n    }\n  }\n\n  // nothing has changed (shouldn't happen but just in case).\n  if (indexForMovingHandle === -1) {\n    return curr;\n  } else {\n    const increment = handleMoveIsPositive ? step : -step;\n\n    for (let i = 0; i < next.length; i++) {\n      const n0 = next[i];\n      const n1 = next[i + 1];\n\n      if (n1 && n0.val === n1.val) {\n        if (i === indexForMovingHandle) {\n          const newStep = n1.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n1.key,\n              n1.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        } else {\n          const newStep = n0.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n0.key,\n              n0.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        }\n      }\n    }\n  }\n\n  return next;\n}\n","export function callAll<T>(...fns: (((e: T) => void) | undefined)[]) {\n  return (e: T) => {\n    return fns.forEach(fn => fn && fn(e));\n  };\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { RailProps } from './types';\n\nconst NOOP = () => ({ value: 0, percent: 0 });\n\nexport class Rail extends Component<RailProps> {\n  getRailProps = (props: OtherProps = {}) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll(props && props.onTouchStart, emitTouch),\n    };\n  };\n\n  render() {\n    const {\n      getRailProps,\n      props: { getEventData, activeHandleID = '', children },\n    } = this;\n\n    const renderedChildren = children({\n      getEventData: getEventData || NOOP,\n      activeHandleID,\n      getRailProps,\n    });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { HandlesProps } from './types';\n\nexport class Handles extends Component<HandlesProps> {\n  autofocus = (e: React.MouseEvent<Element>) => {\n    if (e.target instanceof HTMLElement) {\n      e.target.focus();\n    }\n  };\n\n  getHandleProps = (id: string, props: OtherProps = {}) => {\n    const { emitKeyboard, emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onKeyDown: callAll<React.KeyboardEvent<Element>>(\n        props && props.onKeyDown,\n        (e: React.KeyboardEvent<Element>) => emitKeyboard && emitKeyboard(e, id)\n      ),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        this.autofocus,\n        (e: React.MouseEvent) => emitMouse && emitMouse(e, id)\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        (e: React.TouchEvent<Element>) => emitTouch && emitTouch(e, id)\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getHandleProps,\n      props: { activeHandleID = '', children, handles = [] },\n    } = this;\n\n    const renderedChildren = children({\n      handles,\n      activeHandleID,\n      getHandleProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import { ticks } from 'd3-array';\n\nimport { Interpolator } from '../types';\n\nexport class LinearScale {\n  interpolator: Interpolator | null;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  constructor() {\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.interpolator = null;\n  }\n\n  createInterpolator(domain: number[], range: number[]) {\n    const d0 = domain[0];\n    const d1 = domain[1];\n\n    const r0 = range[0];\n    const r1 = range[1];\n\n    if (d1 < d0) {\n      return (x: number) =>\n        this.interpolateValue(r1, r0)(this.deinterpolateValue(d1, d0)(x));\n    } else {\n      return (x: number) =>\n        this.interpolateValue(r0, r1)(this.deinterpolateValue(d0, d1)(x));\n    }\n  }\n\n  interpolateValue(a: number, b: number) {\n    return (\n      (a = +a),\n      (b -= a),\n      function i(t: number) {\n        return a + b * t;\n      }\n    );\n  }\n\n  deinterpolateValue(a: number, b: number) {\n    return (b -= a = +a) ? (x: number) => (x - a) / b : () => b;\n  }\n\n  rescale() {\n    this.interpolator = null;\n\n    return this;\n  }\n\n  getValue(x: number) {\n    const { domain, range } = this;\n\n    return (\n      this.interpolator ||\n      (this.interpolator = this.createInterpolator(domain, range))\n    )(+x);\n  }\n\n  setDomain(val: number[]) {\n    this.domain = [val[0], val[1]];\n\n    this.rescale();\n\n    return this;\n  }\n\n  getDomain() {\n    return this.domain;\n  }\n\n  setRange(val: number[]) {\n    this.range = [val[0], val[1]];\n\n    return this;\n  }\n\n  getRange() {\n    return this.range;\n  }\n\n  getTicks(count: number) {\n    const d = this.domain;\n    return ticks(d[0], d[d.length - 1], count ? count : 10);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { TicksProps } from './types';\nimport { LinearScale } from '../scales/LinearScale';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Ticks extends Component<TicksProps> {\n  public render() {\n    const {\n      children,\n      values,\n      scale = new LinearScale(),\n      count = 10,\n      getEventData = defaultGetEventData,\n      activeHandleID = '',\n    } = this.props;\n\n    const ticks = (values ? values : scale.getTicks(count)).map((value) => ({\n      id: `$$-${value}`,\n      value,\n      percent: scale.getValue(value),\n    }));\n\n    const renderedChildren = children({ getEventData, activeHandleID, ticks });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { callAll } from '../utils';\nimport { LinearScale } from '../scales/LinearScale';\nimport { TracksProps } from './types';\nimport { OtherProps } from '../types';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Tracks extends Component<TracksProps> {\n  getTrackProps = (props?: OtherProps) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...(props || {}),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        emitTouch\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getTrackProps,\n      props: {\n        children,\n        left = true,\n        right = true,\n        scale = new LinearScale(),\n        handles = [],\n        getEventData = defaultGetEventData,\n        activeHandleID = '',\n      },\n    } = this;\n\n    const domain = scale.getDomain();\n    const tracks = [];\n\n    for (let i = 0; i < handles.length + 1; i++) {\n      let source = handles[i - 1];\n      let target = handles[i];\n\n      if (i === 0 && left === true) {\n        source = { id: '$', value: domain[0], percent: 0 };\n      } else if (i === handles.length && right === true) {\n        target = { id: '$', value: domain[1], percent: 100 };\n      }\n\n      if (source && target) {\n        tracks.push({\n          id: `${source.id}-${target.id}`,\n          source,\n          target,\n        });\n      }\n    }\n\n    const renderedChildren = children({\n      getEventData,\n      activeHandleID,\n      tracks,\n      getTrackProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport class DiscreteScale {\n  step: number = 1;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  setDomain = (val: number[]) => {\n    this.domain = [val[0], val[1]];\n\n    return this;\n  };\n\n  setRange = (val: number[]) => {\n    this.range = [val[0], val[1]];\n\n    return this;\n  };\n\n  setStep = (val: number) => {\n    this.step = val;\n\n    return this;\n  };\n\n  getValue = (x: number) => {\n    const {\n      domain: [d0, d1],\n      range: [r0, r1],\n      step,\n    } = this;\n\n    const p = (clamp(x, d0, d1) - d0) / (d1 - d0);\n    const b = step * Math.round((p * (r1 - r0)) / step) + r0;\n\n    return clamp(b, r0 < r1 ? r0 : r1, r1 > r0 ? r1 : r0);\n  };\n}\n","import React, { PureComponent, isValidElement } from 'react';\nimport warning from 'warning';\nimport { mode1, mode2, mode3 } from './modes';\nimport {\n  isNotValidTouch,\n  getTouchPosition,\n  getUpdatedHandles,\n  getSliderDomain,\n  getHandles,\n  prfx,\n} from './utils';\nimport { Rail } from '../Rail';\nimport { Handles } from '../Handles';\nimport { Ticks } from '../Ticks';\nimport { Tracks } from '../Tracks';\nimport { LinearScale } from '../scales/LinearScale';\nimport { DiscreteScale } from '../scales/DiscreteScale';\n\nimport { SliderProps, SliderState } from './types';\nimport { HandleItem } from '../types';\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst noop = () => {};\n\nconst compare = (b: any[]) => (m: any, d: any, i: number) => m && b[i] === d;\n\nconst equal = (a: any, b: any) => {\n  return a === b || (a.length === b.length && a.reduce(compare(b), true));\n};\n\ninterface RCSComponent {\n  type: {\n    name: 'Rail' | 'Handles' | 'Ticks' | 'Tracks';\n  };\n}\n\nconst isRCSComponent = (item: React.ReactNode) => {\n  if (!isValidElement(item)) {\n    return false;\n  }\n\n  const type = (item as RCSComponent).type;\n  const name = type ? type.name : '';\n\n  return (\n    name === Handles.name ||\n    name === Rail.name ||\n    name === Ticks.name ||\n    name === Tracks.name\n  );\n};\n\nconst getNextValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr - step : curr + step;\n  return reversed ? Math.max(domain[0], newVal) : Math.min(domain[1], newVal);\n};\n\nconst getPrevValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr + step : curr - step;\n  return reversed ? Math.min(domain[1], newVal) : Math.max(domain[0], newVal);\n};\n\nconst defaultDomain = [0, 100];\n\nexport class Slider<\n  T extends HTMLDivElement = HTMLDivElement\n> extends PureComponent<SliderProps, SliderState> {\n  state = {\n    step: 0.1,\n    values: [],\n    domain: defaultDomain,\n    handles: [] as HandleItem[],\n    reversed: false,\n    activeHandleID: '',\n    valueToPerc: null,\n    valueToStep: null,\n    pixelToStep: null,\n  };\n\n  slider = React.createRef<T>();\n\n  static getDerivedStateFromProps(\n    nextProps: SliderProps,\n    prevState: SliderState\n  ) {\n    const {\n      step = 0.1,\n      values,\n      domain = defaultDomain,\n      reversed = false,\n      onUpdate = noop,\n      onChange = noop,\n      warnOnChanges = false,\n    } = nextProps;\n    let valueToPerc = prevState.valueToPerc;\n    let valueToStep = prevState.valueToStep;\n    let pixelToStep = prevState.pixelToStep;\n\n    const nextState: Partial<SliderState> = {};\n\n    if (!valueToPerc || !valueToStep || !pixelToStep) {\n      valueToPerc = new LinearScale();\n      valueToStep = new DiscreteScale();\n      pixelToStep = new DiscreteScale();\n\n      nextState.valueToPerc = valueToPerc;\n      nextState.valueToStep = valueToStep;\n      nextState.pixelToStep = pixelToStep;\n    }\n\n    if (\n      prevState.domain === defaultDomain ||\n      prevState.step === null ||\n      prevState.domain === null ||\n      prevState.reversed === null ||\n      step !== prevState.step ||\n      domain[0] !== prevState.domain[0] ||\n      domain[1] !== prevState.domain[1] ||\n      reversed !== prevState.reversed\n    ) {\n      const [min, max] = domain;\n      valueToStep.setStep(step).setRange([min, max]).setDomain([min, max]);\n\n      if (reversed === true) {\n        valueToPerc.setDomain([min, max]).setRange([100, 0]);\n        pixelToStep.setStep(step).setRange([max, min]);\n      } else {\n        valueToPerc.setDomain([min, max]).setRange([0, 100]);\n        pixelToStep.setStep(step).setRange([min, max]);\n      }\n\n      warning(\n        max > min,\n        `${prfx} Max must be greater than min (even if reversed). Max is ${max}. Min is ${min}.`\n      );\n\n      const { handles, changes } = getHandles(\n        values || prevState.values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes || values === undefined || values === prevState.values) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.step = step;\n      nextState.values = values;\n      nextState.domain = domain === defaultDomain ? [...domain] : domain;\n      nextState.handles = handles;\n      nextState.reversed = reversed;\n    } else if (!equal(values, prevState.values)) {\n      const { handles, changes } = getHandles(\n        values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.values = values;\n      nextState.handles = handles;\n    }\n\n    if (Object.keys(nextState).length) {\n      return nextState;\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    const { pixelToStep } = this.state;\n    const { vertical } = this.props;\n\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners() {\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onKeyDown = (e: KeyboardEvent, handleID: string) => {\n    let validUpKeys = ['ArrowRight', 'ArrowUp'];\n    let validDownKeys = ['ArrowDown', 'ArrowLeft'];\n\n    const {\n      state: { handles },\n      props: {\n        step = 0.1,\n        reversed = false,\n        vertical = false,\n        domain = [0, 100] as number[],\n      },\n    } = this;\n    const key = e.key || `${e.keyCode}`;\n\n    if (!validUpKeys.concat(validDownKeys).includes(key)) {\n      return;\n    }\n\n    if (vertical) {\n      [validUpKeys, validDownKeys] = [validDownKeys, validUpKeys];\n    }\n\n    e.stopPropagation && e.stopPropagation();\n    e.preventDefault && e.preventDefault();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (!found) {\n      return;\n    }\n\n    const currVal = found.val;\n    let newVal = currVal;\n\n    if (validUpKeys.includes(key)) {\n      newVal = getNextValue(currVal, step, domain, reversed);\n    } else if (validDownKeys.includes(key)) {\n      newVal = getPrevValue(currVal, step, domain, reversed);\n    }\n    const nextHandles = handles.map((v) =>\n      v.key === handleID ? { key: v.key, val: newVal } : v\n    );\n\n    this.submitUpdate(nextHandles, true);\n  };\n\n  onMouseDown = (e: MouseEvent, handleID: string) => {\n    this.onStart(e, handleID, false);\n  };\n\n  onTouchStart = (e: TouchEvent, handleID: string) => {\n    if (isNotValidTouch(e)) {\n      return;\n    }\n\n    this.onStart(e, handleID, true);\n  };\n\n  onStart(e: MouseEvent | TouchEvent, handleID: string, isTouch: boolean) {\n    const {\n      state: { handles },\n      props: { onSlideStart = noop },\n    } = this;\n\n    if (!isTouch) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    e.stopPropagation && e.stopPropagation();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (found) {\n      this.setState({ activeHandleID: handleID });\n      onSlideStart(\n        handles.map((d) => d.val),\n        { activeHandleID: handleID }\n      );\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    } else {\n      this.setState({ activeHandleID: '' });\n      this.handleRailAndTrackClicks(e, isTouch);\n    }\n  }\n\n  handleRailAndTrackClicks(e: MouseEvent | TouchEvent, isTouch: boolean) {\n    const {\n      state: { handles: curr, pixelToStep },\n      props: { vertical, reversed = false },\n    } = this;\n    const { slider } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    let updateValue: number;\n\n    if (isTouch) {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n\n    // find the closest handle key\n    let updateKey = '';\n    let minDiff = Infinity;\n\n    for (let i = 0; i < curr.length; i++) {\n      const { key, val } = curr[i];\n      const diff = Math.abs(val - updateValue);\n\n      if (diff < minDiff) {\n        updateKey = key;\n        minDiff = diff;\n      }\n    }\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      updateKey,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.setState({ activeHandleID: updateKey }, () => {\n      this.submitUpdate(nextHandles, true);\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    });\n  }\n\n  getEventData = (e: React.MouseEvent | React.TouchEvent, isTouch: boolean) => {\n    const {\n      state: { pixelToStep, valueToPerc },\n      props: { vertical },\n    } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    let value;\n\n    if (isTouch && e instanceof TouchEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else if (e instanceof MouseEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n    return {\n      value,\n      // @ts-ignore\n      percent: valueToPerc.getValue(value),\n    };\n  };\n\n  addMouseEvents() {\n    if (isBrowser) {\n      document.addEventListener('mousemove', this.onMouseMove);\n      document.addEventListener('mouseup', this.onMouseUp);\n    }\n  }\n\n  addTouchEvents() {\n    if (isBrowser) {\n      document.addEventListener('touchmove', this.onTouchMove);\n      document.addEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onMouseMove = (e: MouseEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID = '' },\n      props: { vertical, reversed = false },\n    } = this;\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  onTouchMove = (e: TouchEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID },\n      props: { vertical, reversed },\n    } = this;\n    if (pixelToStep === null || isNotValidTouch(e)) {\n      return;\n    }\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  submitUpdate(next: HandleItem[], callOnChange = false) {\n    const {\n      mode = 1,\n      step = 0.1,\n      onUpdate = noop,\n      onChange = noop,\n      reversed = false,\n    } = this.props;\n    //@ts-ignore\n    const { getValue } = this.state.valueToStep;\n\n    this.setState(({ handles: curr }) => {\n      let handles: HandleItem[] = [];\n\n      // given the current handles and a candidate set, decide what to do\n      if (typeof mode === 'function') {\n        handles = mode(curr, next, step, reversed, getValue);\n        warning(\n          Array.isArray(handles),\n          'Custom mode function did not return an array.'\n        );\n      } else {\n        switch (mode) {\n          case 1:\n            handles = mode1(curr, next);\n            break;\n          case 2:\n            handles = mode2(curr, next);\n            break;\n          case 3:\n            handles = mode3(curr, next, step, reversed, getValue);\n            break;\n          default:\n            handles = next;\n            warning(false, `${prfx} Invalid mode value.`);\n        }\n      }\n\n      onUpdate(handles.map((d) => d.val));\n\n      if (callOnChange) {\n        onChange(handles.map((d) => d.val));\n      }\n\n      return { handles };\n    });\n  }\n\n  onMouseUp = () => {\n    const {\n      state: { handles = [], activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n    }\n  };\n\n  onTouchEnd = () => {\n    const {\n      state: { handles, activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  render() {\n    const {\n      state: { handles, valueToPerc, activeHandleID },\n      props: {\n        className,\n        rootStyle = {},\n        rootProps = {},\n        component: Comp = 'div',\n        disabled = false,\n        flatten = false,\n      },\n    } = this;\n\n    const mappedHandles = handles.map(({ key, val }) => {\n      // @ts-ignore\n      return { id: key, value: val, percent: valueToPerc.getValue(val) };\n    });\n\n    const children = React.Children.map(this.props.children, (child) => {\n      if (isRCSComponent(child) === true) {\n        return React.cloneElement(child as React.ReactElement, {\n          scale: valueToPerc,\n          handles: mappedHandles,\n          activeHandleID,\n          getEventData: this.getEventData,\n          emitKeyboard: disabled ? noop : this.onKeyDown,\n          emitMouse: disabled ? noop : this.onMouseDown,\n          emitTouch: disabled ? noop : this.onTouchStart,\n        });\n      } else {\n        return child;\n      }\n    });\n\n    return flatten ? (\n      <>\n        {React.createElement(Comp, {\n          ...rootProps,\n          style: rootStyle,\n          className: className,\n          ref: this.slider,\n        })}\n        {children}\n      </>\n    ) : (\n      <>\n        {React.createElement(\n          Comp,\n          {\n            ...rootProps,\n            style: rootStyle,\n            className: className,\n            ref: this.slider,\n          },\n          children\n        )}\n      </>\n    );\n  }\n}\n"],"names":["prfx","getSortByVal","reversed","sortByVal","a","b","val","getUpdatedHandles","handles","updateKey","updateValue","index","findIndex","v","key","slice","sort","getSliderDomain","slider","vertical","s","getBoundingClientRect","d0","top","left","d1","bottom","right","isNotValidTouch","type","touches","length","toLowerCase","getTouchPosition","e","clientY","pageX","getHandles","values","valueToStep","warn","changes","map","x","getValue","warning","i","mode1","_","next","mode2","curr","mode3","step","indexForMovingHandle","handleMoveIsPositive","c","n","increment","n0","n1","newStep","clone","check","callAll","fns","forEach","fn","NOOP","value","percent","Rail","getRailProps","props","emitMouse","emitTouch","_objectSpread","onMouseDown","onTouchStart","getEventData","activeHandleID","children","renderedChildren","React","Children","only","Component","Handles","autofocus","target","HTMLElement","focus","getHandleProps","id","emitKeyboard","onKeyDown","LinearScale","interpolator","domain","range","r0","r1","interpolateValue","deinterpolateValue","t","createInterpolator","rescale","count","d","ticks","defaultGetEventData","Ticks","scale","getTicks","Tracks","getTrackProps","getDomain","tracks","source","push","clamp","min","max","Math","DiscreteScale","setDomain","setRange","setStep","p","round","isBrowser","window","document","noop","compare","m","equal","reduce","isRCSComponent","item","isValidElement","name","getNextValue","newVal","getPrevValue","defaultDomain","Slider","state","valueToPerc","pixelToStep","createRef","handleID","validUpKeys","validDownKeys","keyCode","concat","includes","stopPropagation","preventDefault","found","find","currVal","nextHandles","submitUpdate","onStart","isTouch","current","TouchEvent","MouseEvent","onMouseMove","onTouchMove","onMouseUp","onChange","onSlideEnd","setState","removeEventListener","onTouchEnd","removeListeners","onSlideStart","addTouchEvents","addMouseEvents","handleRailAndTrackClicks","minDiff","Infinity","diff","abs","addEventListener","callOnChange","mode","onUpdate","Array","isArray","className","rootStyle","rootProps","component","Comp","disabled","flatten","mappedHandles","child","cloneElement","createElement","style","ref","nextProps","prevState","warnOnChanges","nextState","undefined","Object","keys","PureComponent"],"mappings":"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"}