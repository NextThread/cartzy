{"version":3,"file":"rcs.cjs.production.min.js","sources":["../src/Slider/utils.ts","../src/Slider/modes.ts","../src/utils.ts","../src/Rail/Rail.tsx","../src/Handles/Handles.tsx","../src/scales/LinearScale.ts","../src/Ticks/Ticks.tsx","../src/Tracks/Tracks.tsx","../src/scales/DiscreteScale.ts","../src/Slider/Slider.tsx"],"sourcesContent":["import React from 'react';\nimport warning from 'warning';\n\nimport { DiscreteScale } from '../scales/DiscreteScale';\nimport { HandleItem } from '../types';\n\nexport const prfx = 'react-compound-slider:';\n\nexport function getSortByVal(reversed: boolean = false) {\n  return function sortByVal(a: HandleItem, b: HandleItem) {\n    if (a.val > b.val) {\n      return reversed ? -1 : 1;\n    }\n\n    if (b.val > a.val) {\n      return reversed ? 1 : -1;\n    }\n\n    return 0;\n  };\n}\n\nexport function getUpdatedHandles(\n  handles: HandleItem[],\n  updateKey: string,\n  updateValue: number,\n  reversed: boolean = false\n) {\n  const index = handles.findIndex(v => v.key === updateKey);\n\n  if (index !== -1) {\n    const { key, val } = handles[index];\n\n    if (val === updateValue) {\n      return handles;\n    }\n\n    return [\n      ...handles.slice(0, index),\n      { key, val: updateValue },\n      ...handles.slice(index + 1),\n    ].sort(getSortByVal(reversed));\n  }\n\n  return handles;\n}\n\nexport function getSliderDomain(slider: Element | null, vertical: boolean) {\n  if (!slider) {\n    return [0, 0];\n  }\n\n  const s = slider.getBoundingClientRect();\n\n  const d0 = vertical ? s.top : s.left;\n  const d1 = vertical ? s.bottom : s.right;\n\n  return [d0, d1];\n}\n\nexport function isNotValidTouch({\n  type = '',\n  touches,\n}: {\n  type: string;\n  touches: TouchEvent['touches'];\n}) {\n  return (\n    !touches ||\n    touches.length > 1 ||\n    (type.toLowerCase() === 'touchend' && touches.length > 0)\n  );\n}\n\nexport function getTouchPosition(\n  vertical: boolean,\n  e: React.TouchEvent | TouchEvent\n) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\n\nexport function getHandles(\n  values: ReadonlyArray<number> = [],\n  reversed: boolean,\n  valueToStep: DiscreteScale,\n  warn: boolean\n) {\n  let changes = 0;\n\n  const handles = values\n    .map(x => {\n      const val = valueToStep.getValue(x);\n\n      if (x !== val) {\n        changes += 1;\n        warning(\n          !warn,\n          `${prfx} Invalid value encountered. Changing ${x} to ${val}.`\n        );\n      }\n\n      return val;\n    })\n    .map((val, i) => ({ key: `$$-${i}`, val }))\n    .sort(getSortByVal(reversed));\n\n  return { handles, changes };\n}\n","import { getUpdatedHandles } from './utils';\nimport { HandleItem } from '../types';\n\n// default mode\nexport function mode1(_: HandleItem[], next: HandleItem[]) {\n  return next;\n}\n\n// prevent duplicate values and crossing\nexport function mode2(curr: HandleItem[], next: HandleItem[]) {\n  for (let i = 0; i < curr.length; i++) {\n    if (curr[i].key !== next[i].key) {\n      return curr;\n    }\n\n    if (next[i + 1] && next[i].val === next[i + 1].val) {\n      return curr;\n    }\n  }\n\n  return next;\n}\n\n// pushable mode\nexport function mode3(\n  curr: HandleItem[],\n  next: HandleItem[],\n  step: number,\n  reversed: boolean,\n  getValue: (x: number) => number\n): HandleItem[] {\n  let indexForMovingHandle = -1;\n  let handleMoveIsPositive = true;\n\n  for (let i = 0; i < curr.length; i++) {\n    const c = curr[i];\n    const n = next[i];\n\n    // make sure keys are in same order if not return curr\n    if (!n || n.key !== c.key) {\n      return curr;\n    } else if (n.val !== c.val) {\n      indexForMovingHandle = i;\n      handleMoveIsPositive = n.val - c.val > 0;\n    }\n  }\n\n  // nothing has changed (shouldn't happen but just in case).\n  if (indexForMovingHandle === -1) {\n    return curr;\n  } else {\n    const increment = handleMoveIsPositive ? step : -step;\n\n    for (let i = 0; i < next.length; i++) {\n      const n0 = next[i];\n      const n1 = next[i + 1];\n\n      if (n1 && n0.val === n1.val) {\n        if (i === indexForMovingHandle) {\n          const newStep = n1.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n1.key,\n              n1.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        } else {\n          const newStep = n0.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n0.key,\n              n0.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        }\n      }\n    }\n  }\n\n  return next;\n}\n","export function callAll<T>(...fns: (((e: T) => void) | undefined)[]) {\n  return (e: T) => {\n    return fns.forEach(fn => fn && fn(e));\n  };\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { RailProps } from './types';\n\nconst NOOP = () => ({ value: 0, percent: 0 });\n\nexport class Rail extends Component<RailProps> {\n  getRailProps = (props: OtherProps = {}) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll(props && props.onTouchStart, emitTouch),\n    };\n  };\n\n  render() {\n    const {\n      getRailProps,\n      props: { getEventData, activeHandleID = '', children },\n    } = this;\n\n    const renderedChildren = children({\n      getEventData: getEventData || NOOP,\n      activeHandleID,\n      getRailProps,\n    });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { HandlesProps } from './types';\n\nexport class Handles extends Component<HandlesProps> {\n  autofocus = (e: React.MouseEvent<Element>) => {\n    if (e.target instanceof HTMLElement) {\n      e.target.focus();\n    }\n  };\n\n  getHandleProps = (id: string, props: OtherProps = {}) => {\n    const { emitKeyboard, emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onKeyDown: callAll<React.KeyboardEvent<Element>>(\n        props && props.onKeyDown,\n        (e: React.KeyboardEvent<Element>) => emitKeyboard && emitKeyboard(e, id)\n      ),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        this.autofocus,\n        (e: React.MouseEvent) => emitMouse && emitMouse(e, id)\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        (e: React.TouchEvent<Element>) => emitTouch && emitTouch(e, id)\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getHandleProps,\n      props: { activeHandleID = '', children, handles = [] },\n    } = this;\n\n    const renderedChildren = children({\n      handles,\n      activeHandleID,\n      getHandleProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import { ticks } from 'd3-array';\n\nimport { Interpolator } from '../types';\n\nexport class LinearScale {\n  interpolator: Interpolator | null;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  constructor() {\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.interpolator = null;\n  }\n\n  createInterpolator(domain: number[], range: number[]) {\n    const d0 = domain[0];\n    const d1 = domain[1];\n\n    const r0 = range[0];\n    const r1 = range[1];\n\n    if (d1 < d0) {\n      return (x: number) =>\n        this.interpolateValue(r1, r0)(this.deinterpolateValue(d1, d0)(x));\n    } else {\n      return (x: number) =>\n        this.interpolateValue(r0, r1)(this.deinterpolateValue(d0, d1)(x));\n    }\n  }\n\n  interpolateValue(a: number, b: number) {\n    return (\n      (a = +a),\n      (b -= a),\n      function i(t: number) {\n        return a + b * t;\n      }\n    );\n  }\n\n  deinterpolateValue(a: number, b: number) {\n    return (b -= a = +a) ? (x: number) => (x - a) / b : () => b;\n  }\n\n  rescale() {\n    this.interpolator = null;\n\n    return this;\n  }\n\n  getValue(x: number) {\n    const { domain, range } = this;\n\n    return (\n      this.interpolator ||\n      (this.interpolator = this.createInterpolator(domain, range))\n    )(+x);\n  }\n\n  setDomain(val: number[]) {\n    this.domain = [val[0], val[1]];\n\n    this.rescale();\n\n    return this;\n  }\n\n  getDomain() {\n    return this.domain;\n  }\n\n  setRange(val: number[]) {\n    this.range = [val[0], val[1]];\n\n    return this;\n  }\n\n  getRange() {\n    return this.range;\n  }\n\n  getTicks(count: number) {\n    const d = this.domain;\n    return ticks(d[0], d[d.length - 1], count ? count : 10);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { TicksProps } from './types';\nimport { LinearScale } from '../scales/LinearScale';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Ticks extends Component<TicksProps> {\n  public render() {\n    const {\n      children,\n      values,\n      scale = new LinearScale(),\n      count = 10,\n      getEventData = defaultGetEventData,\n      activeHandleID = '',\n    } = this.props;\n\n    const ticks = (values ? values : scale.getTicks(count)).map((value) => ({\n      id: `$$-${value}`,\n      value,\n      percent: scale.getValue(value),\n    }));\n\n    const renderedChildren = children({ getEventData, activeHandleID, ticks });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { callAll } from '../utils';\nimport { LinearScale } from '../scales/LinearScale';\nimport { TracksProps } from './types';\nimport { OtherProps } from '../types';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Tracks extends Component<TracksProps> {\n  getTrackProps = (props?: OtherProps) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...(props || {}),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        emitTouch\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getTrackProps,\n      props: {\n        children,\n        left = true,\n        right = true,\n        scale = new LinearScale(),\n        handles = [],\n        getEventData = defaultGetEventData,\n        activeHandleID = '',\n      },\n    } = this;\n\n    const domain = scale.getDomain();\n    const tracks = [];\n\n    for (let i = 0; i < handles.length + 1; i++) {\n      let source = handles[i - 1];\n      let target = handles[i];\n\n      if (i === 0 && left === true) {\n        source = { id: '$', value: domain[0], percent: 0 };\n      } else if (i === handles.length && right === true) {\n        target = { id: '$', value: domain[1], percent: 100 };\n      }\n\n      if (source && target) {\n        tracks.push({\n          id: `${source.id}-${target.id}`,\n          source,\n          target,\n        });\n      }\n    }\n\n    const renderedChildren = children({\n      getEventData,\n      activeHandleID,\n      tracks,\n      getTrackProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport class DiscreteScale {\n  step: number = 1;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  setDomain = (val: number[]) => {\n    this.domain = [val[0], val[1]];\n\n    return this;\n  };\n\n  setRange = (val: number[]) => {\n    this.range = [val[0], val[1]];\n\n    return this;\n  };\n\n  setStep = (val: number) => {\n    this.step = val;\n\n    return this;\n  };\n\n  getValue = (x: number) => {\n    const {\n      domain: [d0, d1],\n      range: [r0, r1],\n      step,\n    } = this;\n\n    const p = (clamp(x, d0, d1) - d0) / (d1 - d0);\n    const b = step * Math.round((p * (r1 - r0)) / step) + r0;\n\n    return clamp(b, r0 < r1 ? r0 : r1, r1 > r0 ? r1 : r0);\n  };\n}\n","import React, { PureComponent, isValidElement } from 'react';\nimport warning from 'warning';\nimport { mode1, mode2, mode3 } from './modes';\nimport {\n  isNotValidTouch,\n  getTouchPosition,\n  getUpdatedHandles,\n  getSliderDomain,\n  getHandles,\n  prfx,\n} from './utils';\nimport { Rail } from '../Rail';\nimport { Handles } from '../Handles';\nimport { Ticks } from '../Ticks';\nimport { Tracks } from '../Tracks';\nimport { LinearScale } from '../scales/LinearScale';\nimport { DiscreteScale } from '../scales/DiscreteScale';\n\nimport { SliderProps, SliderState } from './types';\nimport { HandleItem } from '../types';\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst noop = () => {};\n\nconst compare = (b: any[]) => (m: any, d: any, i: number) => m && b[i] === d;\n\nconst equal = (a: any, b: any) => {\n  return a === b || (a.length === b.length && a.reduce(compare(b), true));\n};\n\ninterface RCSComponent {\n  type: {\n    name: 'Rail' | 'Handles' | 'Ticks' | 'Tracks';\n  };\n}\n\nconst isRCSComponent = (item: React.ReactNode) => {\n  if (!isValidElement(item)) {\n    return false;\n  }\n\n  const type = (item as RCSComponent).type;\n  const name = type ? type.name : '';\n\n  return (\n    name === Handles.name ||\n    name === Rail.name ||\n    name === Ticks.name ||\n    name === Tracks.name\n  );\n};\n\nconst getNextValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr - step : curr + step;\n  return reversed ? Math.max(domain[0], newVal) : Math.min(domain[1], newVal);\n};\n\nconst getPrevValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr + step : curr - step;\n  return reversed ? Math.min(domain[1], newVal) : Math.max(domain[0], newVal);\n};\n\nconst defaultDomain = [0, 100];\n\nexport class Slider<\n  T extends HTMLDivElement = HTMLDivElement\n> extends PureComponent<SliderProps, SliderState> {\n  state = {\n    step: 0.1,\n    values: [],\n    domain: defaultDomain,\n    handles: [] as HandleItem[],\n    reversed: false,\n    activeHandleID: '',\n    valueToPerc: null,\n    valueToStep: null,\n    pixelToStep: null,\n  };\n\n  slider = React.createRef<T>();\n\n  static getDerivedStateFromProps(\n    nextProps: SliderProps,\n    prevState: SliderState\n  ) {\n    const {\n      step = 0.1,\n      values,\n      domain = defaultDomain,\n      reversed = false,\n      onUpdate = noop,\n      onChange = noop,\n      warnOnChanges = false,\n    } = nextProps;\n    let valueToPerc = prevState.valueToPerc;\n    let valueToStep = prevState.valueToStep;\n    let pixelToStep = prevState.pixelToStep;\n\n    const nextState: Partial<SliderState> = {};\n\n    if (!valueToPerc || !valueToStep || !pixelToStep) {\n      valueToPerc = new LinearScale();\n      valueToStep = new DiscreteScale();\n      pixelToStep = new DiscreteScale();\n\n      nextState.valueToPerc = valueToPerc;\n      nextState.valueToStep = valueToStep;\n      nextState.pixelToStep = pixelToStep;\n    }\n\n    if (\n      prevState.domain === defaultDomain ||\n      prevState.step === null ||\n      prevState.domain === null ||\n      prevState.reversed === null ||\n      step !== prevState.step ||\n      domain[0] !== prevState.domain[0] ||\n      domain[1] !== prevState.domain[1] ||\n      reversed !== prevState.reversed\n    ) {\n      const [min, max] = domain;\n      valueToStep.setStep(step).setRange([min, max]).setDomain([min, max]);\n\n      if (reversed === true) {\n        valueToPerc.setDomain([min, max]).setRange([100, 0]);\n        pixelToStep.setStep(step).setRange([max, min]);\n      } else {\n        valueToPerc.setDomain([min, max]).setRange([0, 100]);\n        pixelToStep.setStep(step).setRange([min, max]);\n      }\n\n      warning(\n        max > min,\n        `${prfx} Max must be greater than min (even if reversed). Max is ${max}. Min is ${min}.`\n      );\n\n      const { handles, changes } = getHandles(\n        values || prevState.values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes || values === undefined || values === prevState.values) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.step = step;\n      nextState.values = values;\n      nextState.domain = domain === defaultDomain ? [...domain] : domain;\n      nextState.handles = handles;\n      nextState.reversed = reversed;\n    } else if (!equal(values, prevState.values)) {\n      const { handles, changes } = getHandles(\n        values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.values = values;\n      nextState.handles = handles;\n    }\n\n    if (Object.keys(nextState).length) {\n      return nextState;\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    const { pixelToStep } = this.state;\n    const { vertical } = this.props;\n\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners() {\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onKeyDown = (e: KeyboardEvent, handleID: string) => {\n    let validUpKeys = ['ArrowRight', 'ArrowUp'];\n    let validDownKeys = ['ArrowDown', 'ArrowLeft'];\n\n    const {\n      state: { handles },\n      props: {\n        step = 0.1,\n        reversed = false,\n        vertical = false,\n        domain = [0, 100] as number[],\n      },\n    } = this;\n    const key = e.key || `${e.keyCode}`;\n\n    if (!validUpKeys.concat(validDownKeys).includes(key)) {\n      return;\n    }\n\n    if (vertical) {\n      [validUpKeys, validDownKeys] = [validDownKeys, validUpKeys];\n    }\n\n    e.stopPropagation && e.stopPropagation();\n    e.preventDefault && e.preventDefault();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (!found) {\n      return;\n    }\n\n    const currVal = found.val;\n    let newVal = currVal;\n\n    if (validUpKeys.includes(key)) {\n      newVal = getNextValue(currVal, step, domain, reversed);\n    } else if (validDownKeys.includes(key)) {\n      newVal = getPrevValue(currVal, step, domain, reversed);\n    }\n    const nextHandles = handles.map((v) =>\n      v.key === handleID ? { key: v.key, val: newVal } : v\n    );\n\n    this.submitUpdate(nextHandles, true);\n  };\n\n  onMouseDown = (e: MouseEvent, handleID: string) => {\n    this.onStart(e, handleID, false);\n  };\n\n  onTouchStart = (e: TouchEvent, handleID: string) => {\n    if (isNotValidTouch(e)) {\n      return;\n    }\n\n    this.onStart(e, handleID, true);\n  };\n\n  onStart(e: MouseEvent | TouchEvent, handleID: string, isTouch: boolean) {\n    const {\n      state: { handles },\n      props: { onSlideStart = noop },\n    } = this;\n\n    if (!isTouch) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    e.stopPropagation && e.stopPropagation();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (found) {\n      this.setState({ activeHandleID: handleID });\n      onSlideStart(\n        handles.map((d) => d.val),\n        { activeHandleID: handleID }\n      );\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    } else {\n      this.setState({ activeHandleID: '' });\n      this.handleRailAndTrackClicks(e, isTouch);\n    }\n  }\n\n  handleRailAndTrackClicks(e: MouseEvent | TouchEvent, isTouch: boolean) {\n    const {\n      state: { handles: curr, pixelToStep },\n      props: { vertical, reversed = false },\n    } = this;\n    const { slider } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    let updateValue: number;\n\n    if (isTouch) {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n\n    // find the closest handle key\n    let updateKey = '';\n    let minDiff = Infinity;\n\n    for (let i = 0; i < curr.length; i++) {\n      const { key, val } = curr[i];\n      const diff = Math.abs(val - updateValue);\n\n      if (diff < minDiff) {\n        updateKey = key;\n        minDiff = diff;\n      }\n    }\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      updateKey,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.setState({ activeHandleID: updateKey }, () => {\n      this.submitUpdate(nextHandles, true);\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    });\n  }\n\n  getEventData = (e: React.MouseEvent | React.TouchEvent, isTouch: boolean) => {\n    const {\n      state: { pixelToStep, valueToPerc },\n      props: { vertical },\n    } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    let value;\n\n    if (isTouch && e instanceof TouchEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else if (e instanceof MouseEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n    return {\n      value,\n      // @ts-ignore\n      percent: valueToPerc.getValue(value),\n    };\n  };\n\n  addMouseEvents() {\n    if (isBrowser) {\n      document.addEventListener('mousemove', this.onMouseMove);\n      document.addEventListener('mouseup', this.onMouseUp);\n    }\n  }\n\n  addTouchEvents() {\n    if (isBrowser) {\n      document.addEventListener('touchmove', this.onTouchMove);\n      document.addEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onMouseMove = (e: MouseEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID = '' },\n      props: { vertical, reversed = false },\n    } = this;\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  onTouchMove = (e: TouchEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID },\n      props: { vertical, reversed },\n    } = this;\n    if (pixelToStep === null || isNotValidTouch(e)) {\n      return;\n    }\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  submitUpdate(next: HandleItem[], callOnChange = false) {\n    const {\n      mode = 1,\n      step = 0.1,\n      onUpdate = noop,\n      onChange = noop,\n      reversed = false,\n    } = this.props;\n    //@ts-ignore\n    const { getValue } = this.state.valueToStep;\n\n    this.setState(({ handles: curr }) => {\n      let handles: HandleItem[] = [];\n\n      // given the current handles and a candidate set, decide what to do\n      if (typeof mode === 'function') {\n        handles = mode(curr, next, step, reversed, getValue);\n        warning(\n          Array.isArray(handles),\n          'Custom mode function did not return an array.'\n        );\n      } else {\n        switch (mode) {\n          case 1:\n            handles = mode1(curr, next);\n            break;\n          case 2:\n            handles = mode2(curr, next);\n            break;\n          case 3:\n            handles = mode3(curr, next, step, reversed, getValue);\n            break;\n          default:\n            handles = next;\n            warning(false, `${prfx} Invalid mode value.`);\n        }\n      }\n\n      onUpdate(handles.map((d) => d.val));\n\n      if (callOnChange) {\n        onChange(handles.map((d) => d.val));\n      }\n\n      return { handles };\n    });\n  }\n\n  onMouseUp = () => {\n    const {\n      state: { handles = [], activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n    }\n  };\n\n  onTouchEnd = () => {\n    const {\n      state: { handles, activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  render() {\n    const {\n      state: { handles, valueToPerc, activeHandleID },\n      props: {\n        className,\n        rootStyle = {},\n        rootProps = {},\n        component: Comp = 'div',\n        disabled = false,\n        flatten = false,\n      },\n    } = this;\n\n    const mappedHandles = handles.map(({ key, val }) => {\n      // @ts-ignore\n      return { id: key, value: val, percent: valueToPerc.getValue(val) };\n    });\n\n    const children = React.Children.map(this.props.children, (child) => {\n      if (isRCSComponent(child) === true) {\n        return React.cloneElement(child as React.ReactElement, {\n          scale: valueToPerc,\n          handles: mappedHandles,\n          activeHandleID,\n          getEventData: this.getEventData,\n          emitKeyboard: disabled ? noop : this.onKeyDown,\n          emitMouse: disabled ? noop : this.onMouseDown,\n          emitTouch: disabled ? noop : this.onTouchStart,\n        });\n      } else {\n        return child;\n      }\n    });\n\n    return flatten ? (\n      <>\n        {React.createElement(Comp, {\n          ...rootProps,\n          style: rootStyle,\n          className: className,\n          ref: this.slider,\n        })}\n        {children}\n      </>\n    ) : (\n      <>\n        {React.createElement(\n          Comp,\n          {\n            ...rootProps,\n            style: rootStyle,\n            className: className,\n            ref: this.slider,\n          },\n          children\n        )}\n      </>\n    );\n  }\n}\n"],"names":["prfx","getSortByVal","reversed","a","b","val","getUpdatedHandles","handles","updateKey","updateValue","index","findIndex","v","key","concat","_toConsumableArray","slice","sort","getSliderDomain","slider","vertical","s","getBoundingClientRect","top","left","bottom","right","isNotValidTouch","_ref","_ref$type","type","touches","length","toLowerCase","getTouchPosition","e","clientY","pageX","getHandles","values","arguments","undefined","valueToStep","warn","changes","map","x","getValue","warning","i","mode1","_","next","mode2","curr","mode3","step","indexForMovingHandle","handleMoveIsPositive","c","n","increment","n0","n1","newStep","check","callAll","_len","fns","Array","_key","forEach","fn","NOOP","value","percent","Rail","_Component","_inherits","Component","_super","_createSuper","_this","_classCallCheck","this","args","call","apply","getRailProps","props","_this$props","emitMouse","emitTouch","_objectSpread","onMouseDown","onTouchStart","_createClass","_this$props2","_this$props2$activeHa","activeHandleID","renderedChildren","children","getEventData","React","Children","only","Handles","autofocus","target","HTMLElement","focus","getHandleProps","id","emitKeyboard","onKeyDown","_this$props2$handles","LinearScale","interpolator","domain","range","d0","d1","r0","r1","interpolateValue","deinterpolateValue","t","createInterpolator","rescale","count","d","ticks","defaultGetEventData","Ticks","_this$props$scale","scale","_this$props$count","_this$props$getEventD","_this$props$activeHan","getTicks","Tracks","getTrackProps","_this$props2$left","_this$props2$right","_this$props2$scale","_this$props2$getEvent","getDomain","tracks","source","push","clamp","min","max","Math","DiscreteScale","setDomain","setRange","setStep","_this$domain","_slicedToArray","_this$range","p","round","isBrowser","window","document","noop","getNextValue","newVal","getPrevValue","defaultDomain","Slider","_PureComponent","PureComponent","state","valueToPerc","pixelToStep","createRef","handleID","validUpKeys","validDownKeys","_assertThisInitialize","_assertThisInitialized","_assertThisInitialize2","_assertThisInitialize3","_assertThisInitialize4","_assertThisInitialize5","_assertThisInitialize6","keyCode","includes","stopPropagation","preventDefault","found","find","currVal","nextHandles","submitUpdate","onStart","isTouch","_assertThisInitialize7","_assertThisInitialize8","current","TouchEvent","MouseEvent","onMouseMove","_assertThisInitialize9","_assertThisInitialize10","_assertThisInitialize11","_assertThisInitialize12","_assertThisInitialize13","onTouchMove","_assertThisInitialize14","_assertThisInitialize15","_assertThisInitialize16","onMouseUp","_assertThisInitialize17","_assertThisInitialize18","_assertThisInitialize19","_assertThisInitialize20","_assertThisInitialize21","onChange","_assertThisInitialize22","onSlideEnd","setState","removeEventListener","onTouchEnd","_assertThisInitialize23","_assertThisInitialize24","_assertThisInitialize25","_assertThisInitialize26","_assertThisInitialize27","removeListeners","_this$props$onSlideSt","onSlideStart","addTouchEvents","addMouseEvents","handleRailAndTrackClicks","_this2","_this$state","_this$props$reversed","minDiff","Infinity","diff","abs","addEventListener","callOnChange","_this$props2$mode","mode","_this$props2$step","_this$props2$onUpdate","onUpdate","_this$props2$onChange","_this$props2$reversed","_ref2","isArray","_this3","_this$state2","_this$props3","className","_this$props3$rootStyl","rootStyle","_this$props3$rootProp","rootProps","_this$props3$componen","component","Comp","_this$props3$disabled","disabled","_this$props3$flatten","flatten","mappedHandles","_ref3","child","item","isValidElement","name","isRCSComponent","cloneElement","createElement","style","ref","Fragment","nextProps","prevState","_nextProps$step","_nextProps$domain","_nextProps$reversed","_nextProps$onUpdate","_nextProps$onChange","warnOnChanges","_nextProps$warnOnChan","nextState","_domain","_getHandles","reduce","m","compare","Object","keys"],"mappings":"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"}